/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */@import url(https://fonts.googleapis.com/css?family=Source+Sans+Pro:200,200italic,300,300italic,regular,italic,600,600italic,700,700italic,900,900italic);html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}html{font-size:16px}@media screen and (max-width:768px){html{font-size:14px}}@media screen and (max-width:480px){html{font-size:2.1vmax}}label{display:block}body,html{height:100%}body{font-family:'Source Sans Pro',Arial,Helvetica,sans-serif;line-height:1.42;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;position:relative;color:#3f3f3f;background-color:#e5e5e5}.wrapper{position:relative;width:100%;height:100%}.container{width:95%;max-width:1440px;margin:0 auto;position:relative}h1,h2,h3,h4,h5,h6{margin:0;font-weight:600}table{border-collapse:collapse}ul{padding:0;margin:0}ul li{list-style:none}p{padding:0;margin:0}*{box-sizing:border-box}a{color:inherit}img{display:block;width:100%}button{border:none;background:0 0;cursor:pointer;outline:0}.form{display:flex;flex-direction:column;margin-right:.3125rem}@media screen and (max-width:768px){.form{width:100%;margin-bottom:1rem}}@media screen and (max-width:480px){.form{align-items:center}}.form__block{margin-bottom:1rem}.form__block:nth-child(4){margin-bottom:1.5rem}.form__title{font-size:.625rem;margin-bottom:.25rem}.form__col{width:20.75rem;min-height:27.5rem;padding:1.5rem 1.5rem;background-color:#fffefb;border-radius:6px}@media screen and (max-width:768px){.form__col{width:100%}}.form__input{-webkit-appearance:none;width:17.75rem;height:2.25rem;border:solid 1px transparent;border-radius:6px;box-shadow:0 .1875rem .9375rem .0625rem rgba(0,0,0,.1);padding:.625rem .625rem .6875rem 1rem;font-size:12px}@media screen and (max-width:768px){.form__input{width:100%}}.form__input:focus{border-color:#3f3f3f;outline:0}.form__input_textarea{height:6.25rem;resize:none}.form__circle{display:flex;justify-content:flex-start}.form__btns{display:flex;justify-content:center}.circle{display:inline-flex;align-items:center;justify-content:center;width:.25rem;height:.25rem;background:#ff8484;border-radius:50%}.content{display:flex;flex-wrap:wrap;justify-content:flex-end}@media screen and (max-width:768px){.content{display:flex;flex-wrap:wrap;justify-content:space-between}}@media screen and (max-width:480px){.content{flex-wrap:nowrap;align-items:center;flex-direction:column;width:100%}}.header{display:flex;justify-content:space-between;align-items:center;margin-bottom:1rem;padding-top:2rem}@media screen and (max-width:480px){.header{flex-direction:column}}.header__title{font-size:1.75rem}.header__select{-webkit-appearance:none;min-width:7.8125rem;min-height:2rem;padding:.625rem 2rem .6875rem 1rem;border:none;border:solid .0625rem transparent;border-radius:6px;box-shadow:0 .1875rem .9375rem .0625rem rgba(0,0,0,.1);font-size:.75rem;color:#b4b4b4}.header__select:focus-visible{border:solid .0625rem #3f3f3f;outline:0}.header__triangle{position:relative}.header__triangle:before{content:"";position:absolute;top:0;left:5.875rem;bottom:.375rem;right:0;margin:auto;width:.5rem;height:.5rem;border-bottom:2px solid #b4b4b4;border-left:2px solid #b4b4b4;transform:rotate(-45deg)}.section{display:flex;justify-content:space-between}@media screen and (max-width:768px){.section{flex-direction:column;align-items:center}}.product{width:32%;height:33%;margin-right:.75rem;margin-bottom:.5rem;position:relative;background-color:#fffefb;border-radius:4px}@media screen and (max-width:768px){.product{margin-right:0}}@media screen and (max-width:480px){.product{width:100%}}.product:nth-child(3n){margin-right:0}.product:hover:before{content:url(../../img/trash.png);position:absolute;top:-.9375rem;right:-.625rem;margin:auto}.product__info{padding:1rem 1rem 1.5rem 1rem}.product__price{font-weight:700;font-size:24px}.product__name{margin-bottom:1rem;font-size:1.25rem}.product__desc{margin-bottom:2rem;text-align:left}.btn{width:17.75rem;height:2.25rem;border:none;border-radius:10px;font-size:.75rem;color:#857777;cursor:pointer;transition:.5s;background:#eee}.btn:hover{background:#3f3f3f;transition:1s}.btn:focus-visible{border:solid .0625rem #3f3f3f;outline:0}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
